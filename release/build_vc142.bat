REM ##################################################################################################
REM Build FMI++ and Python wrappers.
REM ##################################################################################################

SETLOCAL

SET PWD=%CD%

ECHO Create build directory ...

RMDIR %BUILD_DIR% /S /Q 2> NUL
MKDIR %BUILD_DIR%
CD %BUILD_DIR%

ECHO Run CMake ...

%CMAKE_BIN_DIR%\cmake.exe %FMIPP_DIR% -G %CMAKE_TARGET% -DCMAKE_CONFIGURATION_TYPES=Release -DBOOST_STATIC_LINKING=ON -DBOOST_INCLUDEDIR=%BOOST_INCLUDE_DIR% -DSWIG_EXECUTABLE=%SWIG_DIR%\swig.exe -DPYTHON_EXECUTABLE=%PYTHON_DIR%\python.exe -DINCLUDE_SUNDIALS=ON -DSUNDIALS_INCLUDEDIR=%SUNDIALS_INCLUDE_DIR% -DSUNDIALS_LIBRARYDIR=%SUNDIALS_LIBRARY_DIR% -DBUILD_SWIG_JAVA=OFF -DBUILD_TESTS=OFF 1> %BUILD_DIR%\cmake.out 2>&1

ECHO Build FMI++ ...

CALL "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" 
msbuild /p:Configuration=Release /verbosity:minimal /nologo fmipp.sln 1> %BUILD_DIR%\msbuild_vs142.out 2>&1

REM ECHO Run tests ...
REM %CMAKE_BIN_DIR%\ctest.exe --no-compress-output -C "Release" -T Test || verify > NUL

REM ##################################################################################################
REM Copy files
REM ##################################################################################################

ECHO Copy files ...

REM Clean up.
DEL "%PY_FMIPP_DIR%\fmipp\lib\*.pyd" 2> NUL
DEL "%PY_FMIPP_DIR%\fmipp\lib\*.dll" 2> NUL

REM Define path to directory with compiled SWIG Python wrapper for FMI++ library (Release mode).
SET FMIPPIM_SWIG_DIR=%BUILD_DIR%\import\swig
SET FMIPPEX_SWIG_DIR=%BUILD_DIR%\export\swig

REM Define path to directory with compiled FMI++ import library (Release mode).
SET FMIPP_DLL_DIR=%BUILD_DIR%\Release

REM Copy Python wrapper generated by SWIG.
COPY "%FMIPPIM_SWIG_DIR%\fmippim.py" "%PY_FMIPP_DIR%\fmipp"
COPY "%FMIPPEX_SWIG_DIR%\fmippex.py" "%PY_FMIPP_DIR%\fmipp\export"

REM Copy Python wrapper library generated by SWIG.
COPY "%FMIPP_DLL_DIR%\_fmippim.pyd" "%PY_FMIPP_DIR%\fmipp\lib"
COPY "%FMIPP_DLL_DIR%\_fmippex.pyd" "%PY_FMIPP_DIR%\fmipp\lib"

REM Copy FMI++ import/export library DLL.
COPY "%FMIPP_DLL_DIR%\fmippim.dll" "%PY_FMIPP_DIR%\fmipp\lib"
COPY "%FMIPP_DLL_DIR%\fmippex.dll" "%PY_FMIPP_DIR%\fmipp\lib"

REM Copy additional libraries for creating FMUs.
COPY "%FMIPP_DLL_DIR%\libfmipp_fmu_frontend.lib" "%PY_FMIPP_DIR%\fmipp\export\bin"
COPY "%FMIPP_DLL_DIR%\fmi2.dll" "%PY_FMIPP_DIR%\fmipp\export\bin"

REM Copy SUNDIALS libraries.
COPY "%SUNDIALS_LIBRARY_DIR%\sundials_cvode.dll" "%PY_FMIPP_DIR%\fmipp\lib"
REM COPY "%SUNDIALS_LIBRARY_DIR%\sundials_nvecserial.dll" "%PY_FMIPP_DIR%\fmipp\lib"
REM COPY "%SUNDIALS_LIBRARY_DIR%\sundials_sunlinsoldense.dll" "%PY_FMIPP_DIR%\fmipp\lib"

REM Copy Boost libraries.
REM COPY "%BOOST_LIBRARY_DIR%\boost_filesystem-%BOOST_VERSION%.dll" "%PY_FMIPP_DIR%\fmipp\lib"
REM COPY "%BOOST_LIBRARY_DIR%\boost_system-%BOOST_VERSION%.dll" "%PY_FMIPP_DIR%\fmipp\lib"

REM Copy Visual Studio runtime libraries.
COPY C:\Windows\System32\msvcp140.dll "%PY_FMIPP_DIR%\fmipp\lib"
COPY C:\Windows\System32\vcruntime140.dll "%PY_FMIPP_DIR%\fmipp\lib"
COPY C:\Windows\System32\vcruntime140_1.dll "%PY_FMIPP_DIR%\fmipp\lib"

REM ##################################################################################################
REM Build the wheel.
REM ##################################################################################################

ECHO Create wheel ...

CD %PY_FMIPP_DIR%
RMDIR build /S /Q 2> NUL

%PYTHON_DIR%\python.exe setup.py bdist_wheel --python-tag %PYTHON_TAG% -p %PLATFORM_TAG% 1> %BUILD_DIR%\bdist_wheel.out 2>&1

ECHO Done.

CD %PWD%

ENDLOCAL